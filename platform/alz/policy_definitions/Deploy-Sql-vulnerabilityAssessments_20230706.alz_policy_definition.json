{
  "name": "Deploy-Sql-vulnerabilityAssessments_20230706",
  "properties": {
    "description": "Deploy SQL Database Vulnerability Assessments when it does not exist in the deployment, and save results to the storage account specified in the parameters.",
    "displayName": "Deploy SQL Database Vulnerability Assessments",
    "metadata": {
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureChinaCloud",
        "AzureUSGovernment"
      ],
      "category": "SQL",
      "replacesPolicy": "Deploy-Sql-vulnerabilityAssessments",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "version": "1.0.0"
    },
    "mode": "Indexed",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect"
        },
        "type": "String"
      },
      "vulnerabilityAssessmentsEmail": {
        "metadata": {
          "description": "The email address(es) to send alerts.",
          "displayName": "The email address(es) to send alerts."
        },
        "type": "Array"
      },
      "vulnerabilityAssessmentsStorageID": {
        "metadata": {
          "description": "The storage account ID to store assessments",
          "displayName": "The storage account ID to store assessments"
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Sql/servers/databases",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "Incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "sqlServerDataBaseName": {
                  "value": "[field('name')]"
                },
                "sqlServerName": {
                  "value": "[first(split(field('fullname'),'/'))]"
                },
                "vulnerabilityAssessmentsEmail": {
                  "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                },
                "vulnerabilityAssessmentsStorageID": {
                  "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "location": {
                    "type": "String"
                  },
                  "sqlServerDataBaseName": {
                    "type": "String"
                  },
                  "sqlServerName": {
                    "type": "String"
                  },
                  "vulnerabilityAssessmentsEmail": {
                    "type": "Array"
                  },
                  "vulnerabilityAssessmentsStorageID": {
                    "type": "String"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-03-01-preview",
                    "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                    "properties": {
                      "recurringScans": {
                        "emailSubscriptionAdmins": false,
                        "emails": "[parameters('vulnerabilityAssessmentsEmail')]",
                        "isEnabled": true
                      },
                      "storageAccountAccessKey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                      "storageContainerPath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]"
                    },
                    "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails[*]",
                  "where": {
                    "notIn": "[parameters('vulnerabilityAssessmentsEmail')]",
                    "value": "current(Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails[*])"
                  }
                },
                "greater": 0
              },
              {
                "equals": true,
                "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
            "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
          ],
          "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom"
  },
  "type": "Microsoft.Authorization/policyDefinitions"
}