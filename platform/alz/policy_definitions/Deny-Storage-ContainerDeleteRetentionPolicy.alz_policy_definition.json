{
  "name": "Deny-Storage-ContainerDeleteRetentionPolicy",
  "properties": {
    "description": "Enforce container delete retention policies larger than seven days for storage account. Enable this for increased data loss protection.",
    "displayName": "Storage Accounts should use a container delete retention policy",
    "metadata": {
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureChinaCloud",
        "AzureUSGovernment"
      ],
      "category": "Storage",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "version": "1.0.0"
    },
    "mode": "All",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect"
        },
        "type": "String"
      },
      "minContainerDeleteRetentionInDays": {
        "defaultValue": 7,
        "metadata": {
          "description": "Specifies the minimum number of days for the container delete retention policy",
          "displayName": "Minimum Container Delete Retention in Days"
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/blobServices",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.enabled"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.enabled",
                "notEquals": true
              },
              {
                "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.days",
                "less": "[parameters('minContainerDeleteRetentionInDays')]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom"
  },
  "type": "Microsoft.Authorization/policyDefinitions"
}